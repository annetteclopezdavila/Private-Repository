# -*- coding: utf-8 -*-
"""CNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19OZq_XSTfMsCC3bHWYLESjCLjtG8-6eH
"""

from google.colab import drive
drive.mount('/content/gdrive')

import tensorflow as tf
import numpy as np
import glob
import re
from PIL import Image
from tensorflow.keras.optimizers import RMSprop
import matplotlib.pyplot as plt

#Train Files
train_files = glob.glob('/content/gdrive/My Drive/Train3/*.jpeg')
train_files

train_files.sort(key=lambda f: int(re.sub('\D', '', f)))
train_imgs = np.array([np.array(Image.open(fname)) for fname in train_files])

labels = np.genfromtxt('/content/gdrive/My Drive/labels.csv', delimiter=',')
train_labs = labels[1:1001, 1]

len(train_labs)

len(train_files)

#Test Files
test_files = glob.glob('/content/gdrive/My Drive/test3/*.jpeg')
test_files

len(test_files)

test_files.sort(key=lambda f: int(re.sub('\D', '', f)))
test_imgs = np.array([np.array(Image.open(fname)) for fname in test_files])
len(test_imgs)

test_labs = labels[1001:1041, 1]
len(test_labs)

train_imgs  = train_imgs / 255.0
test_imgs = test_imgs / 255.0

#------------
#FIRST CNN
#------------
model = tf.keras.models.Sequential([
  tf.keras.layers.Conv2D(128, (3, 3), activation='relu'),
  tf.keras.layers.MaxPooling2D(2, 2),
  tf.keras.layers.Conv2D(64, (3, 3), activation='relu'),
  tf.keras.layers.MaxPooling2D(2, 2),
  tf.keras.layers.Flatten(),
  tf.keras.layers.Dense(64,  activation='relu'),    
  tf.keras.layers.Dense(64, activation=tf.nn.softmax),
  tf.keras.layers.Dense(1)
])
#------------
#SECOND CNN
#------------
model = tf.keras.models.Sequential([
  tf.keras.layers.Conv2D(64, (3, 3), activation='relu'),
  tf.keras.layers.MaxPooling2D(2, 2),
  tf.keras.layers.Flatten(),
  tf.keras.layers.Dense(64,  activation='relu'),    
  tf.keras.layers.Dense(64, activation=tf.nn.softmax),
  tf.keras.layers.Dense(1)
])

model = tf.keras.models.Sequential([
  tf.keras.layers.Conv2D(64, (3, 3), activation='relu'),
  tf.keras.layers.MaxPooling2D(2, 2),
  tf.keras.layers.Flatten(),
  tf.keras.layers.Dense(64,  activation='relu'),    
  tf.keras.layers.Dense(64, activation=tf.nn.softmax),
  tf.keras.layers.Dense(1)
])

optimizer = tf.keras.optimizers.RMSprop(0.001)
model.compile(optimizer = optimizer,
              loss = 'mse',
              metrics=['mse', 'mae'])

history= model.fit(train_imgs, train_labs, epochs=3, steps_per_epoch = 1, batch_size = 5)

model.evaluate(test_imgs, test_labs)

import pandas as pd
hist = pd.DataFrame(history.history)
hist['epoch'] = history.epoch
hist

plt.plot(hist['epoch'], hist['mse'])
plt.title('MSE vs EPOCH CNN 1')
plt.xlabel('Epochs')
plt.ylabel('MSE')

model.summary()

